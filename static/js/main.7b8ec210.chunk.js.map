{"version":3,"sources":["QuizData.js","Quiz.js","index.js"],"names":["QuizData","id","question","options","answer","Quiz","props","loadQuiz","currentIndex","state","setState","nextQuestionHandler","userAnswer","score","checkAnswer","disabled","finishHandler","length","quizEnd","this","prevProps","prevState","map","item","index","className","key","option","onClick","Component","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"6LAAaA,EAAS,CAClB,CACIC,GAAG,EACHC,SAAS,4BACTC,QAAQ,CAAC,SAAD,8BACRC,OAAO,aAEX,CACIH,GAAG,EACHC,SAAS,8BACTC,QAAQ,CAAC,YAAD,yBACRC,OAAO,SAEX,CACIH,GAAG,EACHC,SAAS,gCACTC,QAAQ,CAAC,SAAD,0BACRC,OAAO,UAEX,CACIH,GAAG,EACHC,SAAS,yCACTC,QAAQ,CAAC,UAAD,6BACRC,OAAO,UAEX,CACIH,GAAG,EACHC,SAAS,kCACTC,QAAQ,CAAC,UAAD,qCACRC,OAAO,SAEX,CACIH,GAAG,EACHC,SAAS,4BACTC,QAAQ,CAAC,SAAD,gCACRC,OAAO,YAEX,CACIH,GAAG,EACHC,SAAS,yDACTC,QAAQ,CAAC,eAAD,gDACRC,OAAO,cAEX,CACIH,GAAG,EACHC,SAAS,qCACTC,QAAQ,CAAC,eAAD,6BACRC,OAAO,gBAEX,CACIH,GAAG,EACHC,SAAS,oDACTC,QAAQ,CAAC,MAAD,qBACRC,OAAO,QAEX,CACIH,GAAG,EACHC,SAAS,iCACTC,QAAQ,CAAC,OAAD,sBACRC,OAAO,SCuDAC,G,MA9Gf,kDACE,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAUVC,SAAS,WAAK,IACJC,EAAc,EAAKC,MAAnBD,aACN,EAAKE,UAAS,WACV,MAAM,CACFR,SAASF,EAASQ,GAAcN,SAChCC,QAAQH,EAASQ,GAAcL,QAC/BC,OAAOJ,EAASQ,GAAcJ,YAjBxB,EAqBlBO,oBAAoB,WAAK,IAAD,EACW,EAAKF,MAA9BG,EADc,EACdA,WAAWR,EADG,EACHA,OAAOS,EADJ,EACIA,MAErBD,IAAaR,GACZ,EAAKM,SAAS,CACVG,MAAMA,EAAQ,IAGtB,EAAKH,SAAS,CACZF,aAAa,EAAKC,MAAMD,aAAe,EACvCI,WAAW,QA/BC,EAqClBE,YAAY,SAAAV,GACR,EAAKM,SAAS,CACVE,WAAWR,EACXW,UAAS,KAxCC,EAuDlBC,cAAc,WACP,EAAKP,MAAMD,eAAeR,EAASiB,OAAO,GACzC,EAAKP,SAAS,CACVQ,SAAQ,KAxDhB,EAAKT,MAAM,CACPG,WAAW,KACXJ,aAAa,EACbL,QAAQ,GACRe,SAAQ,EACRL,MAAM,EACNE,UAAS,GARC,EADpB,gEAoCMI,KAAKZ,aApCX,yCA4CqBa,EAAUC,GAAW,IAC9Bb,EAAcW,KAAKV,MAAnBD,aACHW,KAAKV,MAAMD,eAAea,EAAUb,cACnCW,KAAKT,UAAS,WACV,MAAM,CACFR,SAASF,EAASQ,GAAcN,SAChCC,QAAQH,EAASQ,GAAcL,QAC/BC,OAAOJ,EAASQ,GAAcJ,aAnDhD,+BAgEa,IAAD,SACoDe,KAAKV,MAAvDP,EADF,EACEA,SAASC,EADX,EACWA,QAAQK,EADnB,EACmBA,aAAaI,EADhC,EACgCA,WACpC,OAFI,EAC2CM,QAGvC,6BACI,0DAAgCC,KAAKV,MAAMI,MAA3C,WACA,mEACA,4BACKb,EAASsB,KAAI,SAACC,EAAKC,GAAN,OACV,wBAAIC,UAAU,UACdC,IAAKF,GACAD,EAAKnB,aAQ1B,6BACC,4BAAKF,GACV,iDAAmBM,EAAe,EAAlC,eAA0CR,EAASiB,SAE/Cd,EAAQmB,KAAI,SAAAK,GAAM,OACd,uBAAGD,IAAKC,EAAO1B,GAAIwB,UAAS,kBAAab,IAAae,EAAQ,WAAW,MACzEC,QAAS,kBAAI,EAAKd,YAAYa,KAE5BA,MAKTnB,EAAaR,EAASiB,OAAO,GAC9B,4BAAQF,SAAUI,KAAKV,MAAMM,SAAUa,QAAST,KAAKR,qBAArD,iBAIKH,IAAeR,EAASiB,OAAO,GAChC,4BAAQW,QAAST,KAAKH,cACtBD,SAAUI,KAAKV,MAAMM,UADrB,eAtGZ,GAA0Bc,cCD1B,SAASC,IACP,OACE,6BACO,kBAAC,EAAD,OAIIA,gBACTC,EAAYC,SAASC,eAAe,QAC1CC,IAASC,OAAO,kBAACL,EAAD,MAAOC,I","file":"static/js/main.7b8ec210.chunk.js","sourcesContent":["export const QuizData=[\r\n    {\r\n        id:0,\r\n        question:`What is Capital of India?`,\r\n        options:[`Mumbai`,`New Delhi`,`Agra`,`Kolkata`],\r\n        answer:`New Delhi`\r\n    },\r\n    {\r\n        id:1,\r\n        question:`What is Capital of Nigeria?`,\r\n        options:[`New Delhi`,`Abuja`,`Aba`,`Kolkata`],\r\n        answer:`Abuja`\r\n    },\r\n    {\r\n        id:2,\r\n        question:`What is Capital of Australia?`,\r\n        options:[`Mumbai`,`Abuja`,`Warri`,`Sydney`],\r\n        answer:`Sydney`\r\n    },\r\n    {\r\n        id:3,\r\n        question:`Akara is the capital of which country?`,\r\n        options:[`Uruguay`,`Turkey`,`Uganda`,`Vanuatu`],\r\n        answer:`Turkey`\r\n    },\r\n    {\r\n        id:4,\r\n        question:`What is the capital of Finland?`,\r\n        options:[`Conakry`,`Prague`,`Helsinki`,`None of these`],\r\n        answer:`Abuja`\r\n    },\r\n    {\r\n        id:5,\r\n        question:`What is Capital of Syria?`,\r\n        options:[`Rimadi`,`Damascus`,`Owerri`,`Tel Aviv`],\r\n        answer:`Damascus`\r\n    },\r\n    {\r\n        id:6,\r\n        question:`Hitler party which came into power in 1933 is known as`,\r\n        options:[`Labour party`,`Nazi Party`,`Ku-klux-Klan`,`Democratic party`],\r\n        answer:`Nazi Party`\r\n    },\r\n    {\r\n        id:7,\r\n        question:`Epsom is the place associated with`,\r\n        options:[`Horse Racing`,`Polo`,`Shooting`,`Snooker`],\r\n        answer:`Horse racing`\r\n    },\r\n    {\r\n        id:8,\r\n        question:`Golf player Vijay Singh belongs to which country?`,\r\n        options:[`USA`,`Fiji`,`India`,`UK`],\r\n        answer:`Fiji`\r\n    },\r\n    {\r\n        id:9,\r\n        question:`First Afghan War took place in`,\r\n        options:[`1839`,`1843`,`1833`,`1848`],\r\n        answer:`1839`\r\n    },\r\n]","import React,{Component} from 'react'\r\nimport {QuizData} from './QuizData'\r\nimport './styles.css'\r\n\r\nexport class Quiz extends Component{\r\n  constructor(props){\r\n      super(props)\r\n      this.state={\r\n          userAnswer:null,\r\n          currentIndex:0,\r\n          options:[],\r\n          quizEnd:false,\r\n          score:0,\r\n          disabled:true\r\n      }\r\n  }\r\n  loadQuiz=()=>{\r\n      const{currentIndex}=this.state;\r\n      this.setState(()=>{\r\n          return{\r\n              question:QuizData[currentIndex].question,\r\n              options:QuizData[currentIndex].options,\r\n              answer:QuizData[currentIndex].answer\r\n          }\r\n      })\r\n    }\r\n  nextQuestionHandler=()=>{\r\n      const{userAnswer,answer,score}=this.state\r\n    \r\n      if(userAnswer===answer){\r\n          this.setState({\r\n              score:score + 1\r\n          })\r\n      }\r\n      this.setState({\r\n        currentIndex:this.state.currentIndex + 1,\r\n        userAnswer:null\r\n    })\r\n    }\r\n  componentDidMount(){\r\n      this.loadQuiz();\r\n  }\r\n  checkAnswer=answer=> {\r\n      this.setState({\r\n          userAnswer:answer,\r\n          disabled:false\r\n      })\r\n  }\r\n  componentDidUpdate(prevProps,prevState){\r\n      const{currentIndex}=this.state;\r\n      if(this.state.currentIndex!==prevState.currentIndex){\r\n          this.setState(()=>{\r\n              return{\r\n                  question:QuizData[currentIndex].question,\r\n                  options:QuizData[currentIndex].options,\r\n                  answer:QuizData[currentIndex].answer\r\n              }\r\n          });\r\n      }\r\n  }\r\n  finishHandler=()=>{\r\n      if(this.state.currentIndex===QuizData.length-1){\r\n          this.setState({\r\n              quizEnd:true\r\n          })\r\n      }\r\n  }\r\n\r\n    render(){\r\n        const{question,options,currentIndex,userAnswer,quizEnd}=this.state\r\n        if(quizEnd){\r\n            return(\r\n                <div>\r\n                    <h1>Game Over . Final Score is {this.state.score} points</h1>\r\n                    <p>The correct answer for the quiz are:</p>\r\n                    <ul>\r\n                        {QuizData.map((item,index)=>(\r\n                            <li className='options'\r\n                            key={index}>\r\n                                {item.answer}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div>\r\n             <h2>{question}</h2> \r\n        <span>{`Question ${currentIndex + 1} of ${QuizData.length}`}</span>\r\n        {\r\n            options.map(option=>\r\n                <p key={option.id} className={`options ${userAnswer===option? \"selected\":null}`}\r\n                onClick={()=>this.checkAnswer(option)}\r\n                >\r\n                 {option}\r\n                </p>\r\n\r\n                )\r\n        }\r\n        {currentIndex<QuizData.length-1 &&\r\n        <button disabled={this.state.disabled} onClick={this.nextQuestionHandler}>\r\n            Next Question\r\n            </button>\r\n            }\r\n            {currentIndex===QuizData.length-1 && \r\n            <button onClick={this.finishHandler} \r\n            disabled={this.state.disabled}>\r\n               Finish\r\n            </button>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Quiz","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport Quiz from './Quiz'\nfunction App(){\n  return(\n    <div>\n           <Quiz/>\n    </div>\n  )\n}\nexport default App;\nconst rootElement=document.getElementById('root')\nReactDOM.render(<App/>,rootElement)"],"sourceRoot":""}